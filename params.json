{
  "name": "Yamaharxv",
  "tagline": "Yamaha Network Receivers",
  "body": "# Yamaha Network Receivers\r\n\r\n#About\r\n\r\nThis is a java plugin implementation, which allows you to control Yamaha AV Receivers over IP. \r\n\r\n#Tested Models\r\nRX-V473 [working]\r\n\r\n#Supported Models \r\n\r\nnormally, any Yamaha RX-Vxxx models are supported.\r\n\r\n#Installation\r\nIn the target folder, you have two jars:\r\n* The yamaha.rxv-V1.0-SNAPSHOT-jar-with-dependencies.jar: This includes all the dependencies you need to get started\r\n* The yamaha.rxv-V1.0-SNAPSHOT.jar: This one does not include all the depedencies. You have to add them yourself using the following maven dependencies\r\n```\r\n<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.jvnet.jaxb2_commons</groupId>\r\n\t\t\t<artifactId>jaxb2-basics-runtime</artifactId>\r\n\t\t\t<version>0.6.4</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>log4j</groupId>\r\n\t\t\t<artifactId>log4j</artifactId>\r\n\t\t\t<version>1.2.17</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>commons-httpclient</groupId>\r\n\t\t\t<artifactId>commons-httpclient</artifactId>\r\n\t\t\t<version>3.1</version>\r\n\t\t</dependency>\r\n</dependencies>\r\n```\r\n\r\nin the ressources folder, please add the following property fieles\r\n* yamaha.properties\r\n* log4j.properties\r\n\r\nYou will finde an example of these properties in the ressources folder. Now add one of these jars to your project lib and start working :)\r\n\r\n#Supported Functionality\r\n* Volume Control\r\n* Power Control\r\n* Input Control\r\n* Surround Control\r\n* Sound Video Control\r\n* View Reciever Status\r\n\r\n#Planned Functionality\r\n* Tuner Control\r\n* System Setting View\r\n* Partly System Setting Control\r\n\r\n#How to use the API\r\nIn order to get the Reciever Status\r\n```\r\nObjectFactory factory = new ObjectFactory();\r\nYAMAHAAV yamahaav = factory.getRecieverStatus();\r\n```\r\n\r\nTo make mutltiple changes and submit them at once \r\n```\r\nyamahaav.getMainZone().getPowerControl().setPower(YAMAHACMD.POWER.ON);\r\nyamahaav.getMainZone().getSurround().set3DCinemaDSP(YAMAHACMD.SOUNDPROGRAM.CINEMADSP_AUTO);\r\nyamahaav.getMainZone().getVolume().setMute(YAMAHACMD.VOLUME.MUTE_OFF);\r\nfactory.updateReciever(yamahaav);\r\n```\r\n\r\nTo create new objects and make changes to certain elements \r\n```\r\nObjectFactory factory = new ObjectFactory();\r\nYAMAHAAV yamahaav = factory.createRoot();\r\nPowerControl control = factory.createYAMAHAAVMainZonePowerControl();\r\ncontrol.setPower(YAMAHACMD.POWER.ON);\r\nyamahaav.getMainZone().setPowerControl(control);\r\nfactory.updateRecieverProperty(yamahaav);\r\n```\r\nWhen creating a new yamaha structure, put in mind, that you have to maintain the following XML structure. The same applies to every main block.\r\n```\r\n<YAMAHA_AV rsp=\"GET\" RC=\"0\" cmd=\"PUT\">\r\n    <Main_Zone>\r\n    \t<Basic_Status>GetParam</Basic_Status>\r\n        <Power_Control>\r\n            <Power>Standby</Power>\r\n            <Sleep>Off</Sleep>\r\n        </Power_Control>\r\n    </Main_Zone>\r\n</YAMAHA_AV>\r\n```\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}